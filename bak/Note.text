
## SavedVariablesPerCharacter: BlizzardStopwatchOptions

CLASS_SORT_ORDER = {
	"WARRIOR",
	"DEATHKNIGHT",
	"PALADIN",
	"MONK",
	"PRIEST",
	"SHAMAN",
	"DRUID",
	"ROGUE",
	"MAGE",
	"WARLOCK",
	"HUNTER",
	"DEMONHUNTER",
	"EVOKER",
};
MAX_CLASSES = #CLASS_SORT_ORDER;

hooksecurefunc(GroupLootHistoryFrame.ScrollBox, 'SetScrollTargetOffset', function(self)
if not frame:GetView() then
            return
        end
    for _, btn in pairs(self:GetFrames()) do
        set_LootFrame_btn(btn)
    end
end)
 hooksecurefunc(CommunitiesFrameCommunitiesList.ScrollBox, 'SetDataProvider', function(self)
	local view = self:GetView()
	if view and view.frames then
		for _, btn in pairs(view.frames) do
	end
end)

local numItems = C_LootHistory.GetNumItems()
for i=1, numItems do
	local frame = LootHistoryFrame.itemFrames[i]
	
end
LFGListUtil_IsEntryEmpowered() 是否,队长,助理 (UnitIsGroupAssistant('player') or UnitIsGroupLeader('player'))
BACKGROUND
BORDER
ARTWORK
OVERLAY

字符
DRAG_MODEL 拖曳
QUEST_DASH 任务 -
RANGE_INDICATOR = "●"
HEADER_COLON = "：";
INSTANCE_DIFFICULTY_FORMAT = "（%s）";
PLAYER_LIST_DELIMITER = "，"


UIPanelWindows[]

GetClassColoredTextForUnit(unit, text)

FrameUtil.RegisterFrameForEvents(self, table)
FrameUtil.RegisterFrameForUnitEvents(frame, events, ...)
FrameUtil.UnregisterFrameForEvents(self, table)
issecure()

Region:SetVertexColor(colorR, colorG, colorB [, a])
... = securecall(func or functionName, ...)
frame:SetFrameLevel(self:GetFrameLevel() + 5)
UnitPopupSharedMenus.lua
UnitHasVehiclePlayerFrameUI("player")

EditModeManagerFrame:IsEditModeActive()
EditModeManagerFrame:UseRaidStylePartyFrames()

local item = Item:CreateFromItemLink(outputItemInfo.hyperlink)
quality = item:GetItemQuality()

GetItemInfoFromHyperlink(itemLink) LinkUtil.lua
if IsModifiedClick("CHATLINK") then
    local spellLink = C_Spell.GetSpellLink(self:GetSpellID())
    ChatEdit_InsertLink(spellLink)
end
if ( IsModifiedClick("CHATLINK") and ChatEdit_GetActiveWindow() ) then
	local achievementLink = GetAchievementLink(block.id);
	if ( achievementLink ) then
		ChatEdit_InsertLink(achievementLink);
	end
end

--ItemButtonTemplate.lua
if C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID(itemIDOrLink) then
	button.IconOverlay:SetAtlas("AzeriteIconFrame");
elseif C_Item.IsCorruptedItem(itemIDOrLink) then
	button.IconOverlay:SetAtlas("Nzoth-inventory-icon");
elseif IsCosmeticItem(itemIDOrLink) then
	button.IconOverlay:SetAtlas("CosmeticIconFrame");
elseif C_Soulbinds.IsItemConduitByItemInfo(itemIDOrLink) then
	if not quality or not BAG_ITEM_QUALITY_COLORS[quality] then
		quality = Enum.ItemQuality.Common;
	end
	local color = BAG_ITEM_QUALITY_COLORS[quality];
	button.IconOverlay:SetVertexColor(color.r, color.g, color.b);
	button.IconOverlay:SetAtlas("ConduitIconFrame");
	-- If this is missing, the texture will make it apparant instead of error.
	if button.IconOverlay2 then
		button.IconOverlay2:SetAtlas("ConduitIconFrame-Corners");
		button.IconOverlay2:Show();
	end
else


function HandleModifiedItemClick(link, itemLocation)--ItemButtonTemplate.lua
	if ( not link ) then
		return false;
	end
	if ( IsModifiedClick("CHATLINK") ) then
		local linkType = string.match(link, "|H([^:]+)");
		if ( linkType == "instancelock" ) then	--People can't re-link instances that aren't their own.
			local guid = string.match(link, "|Hinstancelock:([^:]+)");
			if ( not string.find(UnitGUID("player"), guid) ) then
				return true;
			end
		end
		if ( ChatEdit_InsertLink(link) ) then
			return true;
		elseif ( SocialPostFrame and Social_IsShown() ) then
			Social_InsertLink(link);
			return true;
		end
	end
	if ( IsModifiedClick("DRESSUP") ) then
		return DressUpItemLocation(itemLocation) or DressUpLink(link);
	end
	if ( IsModifiedClick("EXPANDITEM") ) then
		if C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID(link) then
			OpenAzeriteEmpoweredItemUIFromLink(link);
			return true;
		end
		
		local skillLineID = C_TradeSkillUI.GetSkillLineForGear(link);
		if skillLineID then
			OpenProfessionUIToSkillLine(skillLineID);
			return true;
		end
	end
	return false;
end

if ChatEdit_GetActiveWindow() then
    securecall(ChatEdit_InsertLink, link)
else
    securecall(ChatFrame_OpenChat, link)
end



Day={0.10, 0.72, 1},--日常 |cff19b7ff  任务颜色
Week={0.02, 1, 0.66},--周长 |cff05ffa8
Legendary={1, 0.49, 0},--传说 |cffff7c00
Calling={1, 0, 0.9},--使命 |cffff00e5

LOCALE_enUS  1  
LOCALE_koKR  2  
LOCALE_frFR  3  
LOCALE_deDE  4  
LOCALE_zhCN  5  
LOCALE_esES  6  
LOCALE_zhTW  7  
LOCALE_esMX  8
LOCALE_ruRU  9
LOCALE_ptBR  10
LOCALE_itIT  11

StaticPopupDialogs
https://wowpedia.fandom.com/wiki/Creating_simple_pop-up_dialog_boxes

local hasPetUI, isHunterPet = HasPetUI()
Frame:DisableDrawLayer('BACKGROUND')

fileID = GetFileIDFromPath(filePath)--检查,自定义,文件是否存在

InterfaceOptionsFrame_OpenToCategory(id)

CharacterFrameTab_OnClick (self, button)
if ( name == "CharacterFrameTab1" ) then
		ToggleCharacter("PaperDollFrame")
elseif ( name == "CharacterFrameTab2" ) then
		ToggleCharacter("ReputationFrame")
elseif ( name == "CharacterFrameTab3" ) then
		CharacterFrame_ToggleTokenFrame()
end

ToggleCollectionsJournal(tabIndex) UIParent.lua--收藏
ToggleToyCollection(autoPageToCollectedToyID)

ToggleCharacter("PaperDollFrame")--角色

ToggleEncounterJournal()--可能会出错
EJ_ContentTab_Select(EncounterJournalDungeonTab:GetID())

ToggleTalentFrame(self.suggestedTab)--天赋

TogglToggleAchievementFrame()--成就
ToggleQuestLog()--
ToggleGuildFrame()
ToggleCommunitiesFrame()

TogglePVPUI()
ToggleStoreUI()
ToggleGarrisonMissionUI()
ToggleCovenantMissionUI()
ToggleOrderHallTalentUI()
ToggleCovenantRenown()
ToggleExpansionLandingPage()
ToggleFramerate(true)
ToggleOrderHallTalentUI()
ToggleGameMenu()
ToggleFrame(frame)
OpenAchievementFrameToAchievement(achievementID)

BOOKTYPE_SPELL = "spell";
BOOKTYPE_PROFESSION = "professions";
BOOKTYPE_PET
ToggleSpellBook(BOOKTYPE_SPELL)--bug

PVEFrame_ToggleFrame();
PVEFrame_ToggleFrame("GroupFinderFrame", LFDParentFrame);
PVEFrame_ToggleFrame("GroupFinderFrame", RaidFinderFrame);
PVEFrame_ToggleFrame("GroupFinderFrame", nil);


Interface\Cursor\UI-Cursor-Move   Redlist.xml

securecall('',)
wrapFunc(C_PetBattles.DeclineQueuedPVPMatch)



 MicroButtonTooltipText('法术书和专业', "TOGGLESPELLBOOK")
 GetBindingText


SharedUIPanelTemplates.xml
UICheckButtonTemplate
InterfaceOptionsCheckButtonTemplate
local myCheckButton = CreateFrame("CheckButton", nil, UIParent, "ChatConfigCheckButtonTemplate")
myCheckButton:SetPoint("TOPLEFT", 200, -65)
myCheckButton.Text:SetText("CheckBox Name")
myCheckButton.tooltip = "This is where you place MouseOver Text."
myCheckButton:HookScript("OnClick", function()
        --do stuff
end)
<CheckButton name="UICheckButtonArtTemplate" virtual="true">
<NormalTexture file="Interface\Buttons\UI-CheckBox-Up"/>
<PushedTexture file="Interface\Buttons\UI-CheckBox-Down"/>
<HighlightTexture file="Interface\Buttons\UI-CheckBox-Highlight" alphaMode="ADD"/>
<CheckedTexture file="Interface\Buttons\UI-CheckBox-Check"/>
<DisabledCheckedTexture file="Interface\Buttons\UI-CheckBox-Check-Disabled"/>
</CheckButton>


function IsRetail()
    return WOW_PROJECT_ID == WOW_PROJECT_MAINLINE
end
function IsClassic()
    return WOW_PROJECT_ID == WOW_PROJECT_CLASSIC
end
function IsWrath()
    return WOW_PROJECT_ID == WOW_PROJECT_WRATH_CLASSIC
end

self:SetButtonState('PUSHED')
self:SetButtonState('NORMAL')

背包
PaperDoll_IsEquippedSlot

StaticPopupDialogs["CONFIRM_PLAYER_CHOICE_WITH_CONFIRMATION_STRING"] = {
	text = "%s",
	button1 = ACCEPT,
	button2 = DECLINE,
	hideOnEscape = 1,
	timeout = 0,
	exclusive = 1,
	whileDead = 1,
	hasEditBox = 1,
	maxLetters = 32,

	OnAccept = function(self)
		self.data.owner:OnConfirm();
	end,
	OnShow = function(self)
		self.button1:Disable();
		self.button2:Enable();
		self.editBox:SetFocus();
	end,
	OnHide = function(self)
		self.editBox:SetText("");
	end,
	EditBoxOnEnterPressed = function(self)
		local parent = self:GetParent();
        parent:Hide();
	end,
	EditBoxOnTextChanged = function (self)
		local parent = self:GetParent();
		StaticPopup_StandardConfirmationTextHandler(self, parent.data.confirmationString);
	end,
	EditBoxOnEscapePressed = function(self)
		self:GetParent():Hide();
		ClearCursor();
	end
};

function EditModeManagerFrameMixin:ShowRenameLayoutDialog(layoutButton)
	local function onAcceptCallback(layoutName)
		self:RenameLayout(layoutButton.layoutIndex, layoutName);
	end
	local data = {text = HUD_EDIT_MODE_RENAME_LAYOUT_DIALOG_TITLE, text_arg1 = layoutButton.layoutData.layoutName, callback = onAcceptCallback, acceptText = SAVE }
	StaticPopup_ShowCustomGenericInputBox(data);
end
function StaticPopup_ShowCustomGenericInputBox(customData, insertedFrame)
	StaticPopup_Show("GENERIC_INPUT_BOX", nil, nil, customData, insertedFrame);
end


材质
SetPortraitTexture(textureObject, unitToken [, disableMasking])
SetPortraitToTexture(textureObject, texturePath)
SetItemButtonTexture(button, icon)
C_Texture.GetAtlasInfo(atlas)
C_Texture.GetFilenameFromFileDataID(fileDataID)
SetItemButtonTextureVertexColor(button, 1.0, 1.0, 1.0)
SetItemButtonNormalTextureVertexColor(button, 1.0, 1.0, 1.0)
Interface/WorldMap/UI-QuestPoi-NumberIcons
Interface/Minimap/POIIcons



UIParent.lua
:WrapTextInColorCode()
GREEN_FONT_COLOR
BLUE_FONT_COLOR
YELLOW_FONT_COLOR
NORMAL_FONT_COLOR
HIGHLIGHT_FONT_COLOR
|cnNORMAL_FONT_COLOR:
RED_FONT_COLOR,
YELLOW_FONT_COLOR,
ORANGE_FONT_COLOR,
EPIC_PURPLE_COLOR,
GREEN_FONT_COLOR,
RARE_BLUE_COLOR,
GRAY_FONT_COLOR

ITEM_QUALITY_COLORS[quality]
0 Poor 9d9d9d
1 Common ffffff
2 Uncommon 1eff00
3 Rare 0070dd
4 Epic a335ee
5 Legendary ff8000
6 Artifact e6cc80
7 Heirloom 00ccff
8 WoW Token 00ccff

FriendsFrame.xml
<EditBox name="AddFriendNameEditBox" autoFocus="false" letters="255" inherits="AutoCompleteEditBoxTemplate">

测试
local frame= CreateFrame('Frame',nil,nil,'ScrollingEditBoxTemplate')--ScrollTemplates.lua
frame:SetPoint('CENTER')
frame:SetSize(150,150)
frame.texture= frame:CreateTexture(nil, "BACKGROUND")
frame.texture:SetAllPoints(frame)
frame.texture:SetAtlas('CreditsScreen-Background-0')
frame.texture:SetAlpha(0.5)



10.2
local SliceDemo = CreateFrame("Frame", nil, UIParent);
SliceDemo:SetPoint("CENTER");
SliceDemo:SetSize(256, 256);
SliceDemo:SetResizable(true);

SliceDemo.Texture = SliceDemo:CreateTexture();
SliceDemo.Texture:SetTexture([[interface/soulbinds/soulbindsconduitpendinganimationmask]])
SliceDemo.Texture:SetTextureSliceMargins(24, 24, 24, 24);
SliceDemo.Texture:SetTextureSliceMode(Enum.UITextureSliceMode.Tiled);
SliceDemo.Texture:SetAllPoints(SliceDemo);
SliceDemo.Texture:SetVertexColor(0, 1, 0);


SliceDemo.ResizeButton = CreateFrame("Button", nil, SliceDemo, "PanelResizeButtonTemplate");
SliceDemo.ResizeButton:SetPoint("BOTTOMRIGHT");




BreakUpLargeNumbers()
InClickBindingMode()

for bag= BACKPACK_CONTAINER, NUM_BAG_FRAMES + NUM_REAGENTBAG_FRAMES do--NUM_TOTAL_EQUIPPED_BAG_SLOTS Enum.BagIndex.Backpack
    for slot=1, C_Container.GetContainerNumSlots(bag) do
        local info = C_Container.GetContainerItemInfo(bag, slot)
        C_Container.UseContainerItem(bag, slot)
    end
end

TextureUtil.lua
local MicroLFGRoleIcons = {
	["GUIDE"] = "UI-LFG-RoleIcon-Leader-Micro",
	["TANK"] = "UI-LFG-RoleIcon-Tank-Micro",
	["HEALER"] = "UI-LFG-RoleIcon-Healer-Micro",
	["DAMAGER"] = "UI-LFG-RoleIcon-DPS-Micro",
};
LFG_LIST_GROUP_DATA_ATLASES = {
	--Roles
	TANK = GetMicroIconForRole("TANK"),
	HEALER = GetMicroIconForRole("HEALER"),
	DAMAGER = GetMicroIconForRole("DAMAGER"),
};

if (UIDropDownMenu_GetCurrentDropDown() == MountJournal.mountOptionsMenu) then
	HideDropDownMenu(1);
end

hooksecurefunc(SettingsCategoryListButtonMixin, 'Init', function(self, initializer)--列表 Blizzard_CategoryList.lua
hooksecurefunc(SettingsCategoryListHeaderMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsListSectionHeaderMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsListSearchCategoryMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsCheckBoxControlMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsSliderControlMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsDropDownControlMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsButtonControlMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsCheckBoxWithButtonControlMixin, 'Init', function(self, initializer)
hooksecurefunc(SettingsCheckBoxSliderControlMixin, 'Init', function(self, initializer)--Blizzard_SettingControls.lua
hooksecurefunc(SettingsCheckBoxDropDownControlMixin, 'Init', function(self, initializer)--Blizzard_SettingControls.lua
hooksecurefunc(KeyBindingFrameBindingTemplateMixin, 'Init', function(self, initializer)
hooksecurefunc('BindingButtonTemplate_SetupBindingButton', function(_, button)--BindingUtil.lua
hooksecurefunc(SettingsListElementInitializer, 'Init', function(self, data)
hooksecurefunc(SettingsPanelMixin, 'OnSearchTextChanged', function(self)


--UnitUtil.lua
PlayerUtil.GetCurrentSpecID()
PlayerUtil.GetSpecName()
PlayerUtil.GetSpecNameBySpecID(specID, playerSex)
PlayerUtil.GetSpecIconBySpecID(specID, playerSex)
PlayerUtil.ShouldUseNativeFormInModelScene()
PlayerUtil.GetClassID()
PlayerUtil.GetClassName()
PlayerUtil.GetClassInfo()
PlayerUtil.GetClassFile()
PlayerUtil.GetClassColor()
PlayerUtil.CanUseClassTalents()
PlayerUtil.HasFriendlyReaction(unit)


local item = Item:CreateFromItemLink(dropInfo.itemHyperlink);
local itemQuality = item:GetItemQuality();
local qualityColor = ITEM_QUALITY_COLORS[itemQuality].color;

self.ItemName:SetText(item:GetItemName());
self.ItemName:SetVertexColor(qualityColor:GetRGB());
SetItemButtonQuality(self.Item, itemQuality, dropInfo.itemHyperlink);
self.Item.icon:SetTexture(item:GetItemIcon());


--语言 ClubFinderLanguageDropdownInitialize(self, level)
local ignoreLocaleRestrictions = true;
local locales = GetAvailableLocaleInfo(ignoreLocaleRestrictions);
for _, localeInfo in pairs(locales) do
	if LocaleUtil.ContainInstructionForLocale(localeInfo.localeName) then
		info.iconInfo = {};
		Mixin(info.iconInfo, LocaleUtil.CreateTextureInfoForInstructions(localeInfo.localeName));
		info.iconOnly = true;
		info.icon = LocaleUtil.GetInstructionTexture();
	end
end

local f = CreateFrame("Frame", nil, UIParent, "BackdropTemplate")
f:SetPoint("CENTER", 0, 50)
f:SetSize(132, 50)
f:SetBackdrop({
	bgFile = "Interface/Tooltips/UI-Tooltip-Background",
	edgeFile = "Interface/Tooltips/UI-Tooltip-Border",
	edgeSize = 16,
	insets = { left = 4, right = 4, top = 4, bottom = 4 },
})
f:SetBackdropColor(0, 0, 0, .5)
f.glide = f:CreateFontString(nil, nil, "GameTooltipText")
f.glide:SetPoint("TOPLEFT", 10, -12)
f.movespeed = f:CreateFontString(nil, nil, "GameTooltipText")
f.movespeed:SetPoint("TOPLEFT", f.glide, "BOTTOMLEFT")

C_Timer.NewTicker(.1, function()
	local isGliding, canGlide, forwardSpeed = C_PlayerInfo.GetGlidingInfo()
	local base = isGliding and forwardSpeed or GetUnitSpeed("player")
	local movespeed = Round(base / BASE_MOVEMENT_SPEED * 100)
	f.glide:SetText(format("Gliding speed: |cff71d5ff%d%%|r", forwardSpeed))
	f.movespeed:SetText(format("Move speed: |cffffff00%d%%|r", movespeed))
end)

IsPublicBuild() 
IsTestBuild() 
IsGMClient()







:SetAttribute("spell", flyout[i].spellID)
:SetAttribute("flyoutID", flyoutID)
:SetAttribute("flyoutIndex", i)
:SetAttribute("_onclick", [=[self:Hide(); self:GetFrameRef("RaidUtilityPanel"):Show();]=])


https://wowpedia.fandom.com/wiki/WOW_PROJECT_ID